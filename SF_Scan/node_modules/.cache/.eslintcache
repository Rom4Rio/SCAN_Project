[{"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\index.js":"1","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\store.js":"2","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\App.jsx":"3","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\request.js":"4","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\token.js":"5","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Base.jsx":"6","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\EmptyPage\\EmptyPage.jsx":"7","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Main.jsx":"8","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\NotFound\\NotFound.jsx":"9","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\LoginPage.jsx":"10","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\Signup\\Signup.jsx":"11","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LogoutPage\\LogoutPage.jsx":"12","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\Signin\\Signin.jsx":"13","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\ResponsePage.jsx":"14","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\RequestPage\\RequestPage.jsx":"15","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Header.jsx":"16","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Footer\\Footer.jsx":"17","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section3\\Section3.jsx":"18","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section4\\Section4.jsx":"19","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section2\\Section2.jsx":"20","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section1\\Section1.jsx":"21","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Documents\\Documents.jsx":"22","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Total\\Total.jsx":"23","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Login\\Login.jsx":"24","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Menu\\Menu.jsx":"25","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\MobileMenu\\MobileMenu.jsx":"26","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\AccountInfo\\Account\\Account.jsx":"27","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\AccountInfo\\Info\\Info.jsx":"28","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section4\\Tariff\\Tariff.jsx":"29","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Documents\\Document\\Document.jsx":"30","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\MainMenu.jsx":"31"},{"size":403,"mtime":1702118107919,"results":"32","hashOfConfig":"33"},{"size":232,"mtime":1702118108471,"results":"34","hashOfConfig":"33"},{"size":2373,"mtime":1702118107926,"results":"35","hashOfConfig":"33"},{"size":1326,"mtime":1703332885864,"results":"36","hashOfConfig":"33"},{"size":1232,"mtime":1702118108484,"results":"37","hashOfConfig":"33"},{"size":272,"mtime":1702118107940,"results":"38","hashOfConfig":"33"},{"size":231,"mtime":1702118107946,"results":"39","hashOfConfig":"33"},{"size":529,"mtime":1702118108158,"results":"40","hashOfConfig":"33"},{"size":221,"mtime":1702118108280,"results":"41","hashOfConfig":"33"},{"size":1729,"mtime":1702118108086,"results":"42","hashOfConfig":"33"},{"size":213,"mtime":1702118108138,"results":"43","hashOfConfig":"33"},{"size":394,"mtime":1702118108151,"results":"44","hashOfConfig":"33"},{"size":4168,"mtime":1702118108109,"results":"45","hashOfConfig":"33"},{"size":4987,"mtime":1702118108318,"results":"46","hashOfConfig":"33"},{"size":10286,"mtime":1702118108293,"results":"47","hashOfConfig":"33"},{"size":851,"mtime":1702118107974,"results":"48","hashOfConfig":"33"},{"size":743,"mtime":1702118107961,"results":"49","hashOfConfig":"33"},{"size":251,"mtime":1702118108231,"results":"50","hashOfConfig":"33"},{"size":2362,"mtime":1702118108248,"results":"51","hashOfConfig":"33"},{"size":2322,"mtime":1702118108186,"results":"52","hashOfConfig":"33"},{"size":949,"mtime":1702118108172,"results":"53","hashOfConfig":"33"},{"size":2340,"mtime":1702118108336,"results":"54","hashOfConfig":"33"},{"size":3753,"mtime":1702118108363,"results":"55","hashOfConfig":"33"},{"size":491,"mtime":1702118108030,"results":"56","hashOfConfig":"33"},{"size":698,"mtime":1702118108043,"results":"57","hashOfConfig":"33"},{"size":2990,"mtime":1702118108056,"results":"58","hashOfConfig":"33"},{"size":840,"mtime":1702118107992,"results":"59","hashOfConfig":"33"},{"size":2029,"mtime":1702118108012,"results":"60","hashOfConfig":"33"},{"size":2569,"mtime":1702118108261,"results":"61","hashOfConfig":"33"},{"size":3178,"mtime":1702118108349,"results":"62","hashOfConfig":"33"},{"size":160,"mtime":1702118107984,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"w7s5qg",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"67"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\index.js",[],[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\store.js",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\App.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\request.js",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\redux\\token.js",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Base.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\EmptyPage\\EmptyPage.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Main.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\LoginPage.jsx",["163"],[],"import css from \"./LoginPage.module.css\"\nimport {NavLink, Outlet, useNavigate} from \"react-router-dom\";\nimport {useToken} from \"../../redux/token\";\nimport {useEffect} from \"react\";\n\nimport characters from \"./characters.svg\"\n\nconst LoginPage = (props) => {\n    const navigate = useNavigate();\n    const token = useToken()\n\n    useEffect(() => {\n        if (token) {\n            navigate(\"/\");\n        }\n    }, [token])\n\n    return (\n        <main className={css.signin}>\n            <div className={css.left}>\n                <h1 className={css.text}>\n                    Для оформления подписки на тариф, необходимо авторизоваться.\n                </h1>\n                <img className={css.image} src={characters} alt=\"\" />\n            </div>\n            <div className={css.right}>\n                <div className={css.form}>\n                    <div className={css.frame}>\n                        <div className={css.menu}>\n                            <NavLink to=\"/login\"  className={({isActive}) => isActive ? css.menuActive : css.menuNormal}>\n                                Войти\n                            </NavLink>\n                            <NavLink to=\"/login/register\"  className={({isActive}) => isActive ? css.menuActive : css.menuNormal}>\n                                Зарегистрироваться\n                            </NavLink>\n                        </div>\n                        <Outlet />\n                    </div>\n                    <div className={css.lock}></div>\n                </div>\n            </div>\n            <img className={css.imageBottom} src={characters} alt=\"\" />\n        </main>\n    )\n}\n\nexport default LoginPage","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\Signup\\Signup.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LogoutPage\\LogoutPage.jsx",["164"],[],"import {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {clearToken} from \"../../redux/token\";\n\nconst LogoutPage = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        dispatch(clearToken())\n        navigate('/')\n    }, [])\n\n    return \"\"\n}\n\nexport default LogoutPage","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\LoginPage\\Signin\\Signin.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\ResponsePage.jsx",["165"],[],"import {useSelector} from \"react-redux\";\nimport {useToken} from \"../../redux/token\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Total from \"./Total/Total\";\nimport Documents from \"./Documents/Documents\";\n\nimport css from \"./ResponsePage.module.css\"\nimport svg from \"./woman-target.svg\"\n\nconst ResponsePage = () => {\n    const navigate = useNavigate()\n    const token = useToken()\n    const request = useSelector((state) => state.request)\n    const [histograms, setHistograms] = useState(null)\n    const [objects, setObjects] = useState(null)\n    const [error, setError] = useState(false)\n\n    const processHistograms = (response) => {\n        const data = {\n            totalDocuments: [],\n            riskFactors: [],\n        }\n        for (let l of response.data.data) {\n            switch (l.histogramType) {\n                case \"totalDocuments\":\n                    data.totalDocuments = l.data\n                    break\n                case \"riskFactors\":\n                    data.riskFactors = l.data\n                    break\n                default:\n                    break\n            }\n        }\n        data.total = data.totalDocuments\n            .reduce((sum, item) => sum + item.value, 0)\n            .toLocaleString()\n        setHistograms(data)\n    }\n\n    const processObjects = (response) => {\n        setObjects(response.data.items)\n    }\n\n    useEffect(() => {\n        if (token === false) {\n            navigate(\"/login\")\n            return\n        }\n        if (request.empty) {\n            navigate(\"/request\")\n            return\n        }\n        const histogramsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch/histograms'\n        const objectsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch'\n        const search = {\n            issueDateInterval: {\n                startDate: new Date(request.startDate).toISOString(),\n                endDate: new Date(request.endDate).toISOString(),\n            },\n            searchContext: {\n                targetSearchEntitiesContext: {\n                    targetSearchEntities: [\n                        {\n                            type: \"company\",\n                            sparkId: null,\n                            entityId: null,\n                            inn: request.inn,\n                            maxFullness: request.maxFullness,\n                            inBusinessNews: request.inBusinessNews,\n                        }\n                    ],\n                    onlyMainRole: request.onlyMainRole,\n                    tonality: request.tonality,\n                    onlyWithRiskFactors: request.onlyWithRiskFactors,\n                    riskFactors: {\n                        and: [],\n                        or: [],\n                        not: []\n                    },\n                    themes: {\n                        and: [],\n                        or: [],\n                        not: []\n                    }\n                },\n                themesFilter: {\n                    and: [],\n                    or: [],\n                    not: []\n                }\n            },\n            searchArea: {\n                includedSources: [],\n                excludedSources: [],\n                includedSourceGroups: [],\n                excludedSourceGroups: []\n            },\n            attributeFilters: {\n                excludeTechNews: request.excludeTechNews,\n                excludeAnnouncements: request.excludeAnnouncements,\n                excludeDigests: request.excludeDigests,\n            },\n            similarMode: \"duplicates\",\n            limit: request.limit,\n            sortType: \"sourceInfluence\",\n            sortDirectionType: \"desc\",\n            intervalType: \"month\",\n            histogramTypes: [\n                \"totalDocuments\",\n                \"riskFactors\"\n            ]\n        }\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            }\n        }\n        axios\n            .post(histogramsUrl, search, config)\n            .then(processHistograms)\n            .catch(() => {setError(true)})\n        axios\n            .post(objectsUrl, search, config)\n            .then(processObjects)\n            .catch(() => {setError(true)})\n    }, [token, request])\n\n    return (\n        <main className={css.response}>\n            <h1 className={css.head}>Ищем. Скоро будут результаты</h1>\n            <p className={css.subHead}>Поиск может занять некоторое время, просим сохранять терпение.</p>\n            <img className={css.img} src={svg} alt=\"\"/>\n            <Total error={error} histograms={histograms}/>\n            {objects ? <Documents token={token} objects={objects}/> : \"\" }\n        </main>\n    )\n}\n\nexport default ResponsePage","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\RequestPage\\RequestPage.jsx",["166"],[],"import css from './RequestPage.module.css'\nimport {useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setRequest} from \"../../redux/request\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useToken} from \"../../redux/token\";\n\nconst RequestPage = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const token = useToken()\n    const request = useSelector((state) => state.request)\n\n    const [state, setState] = useState({\n        inn: false,\n        innError: false,\n        limit: false,\n        limitError: false,\n        date: false,\n        dateError: false,\n        disableButton: true,\n    })\n\n    const inn = useRef(null)\n    const tonality = useRef(null)\n    const limit = useRef(null)\n    const startDate = useRef(null)\n    const endDate = useRef(null)\n\n    const maxFullness = useRef(null)\n    const inBusinessNews = useRef(null)\n    const onlyMainRole = useRef(null)\n    const onlyWithRiskFactors = useRef(null)\n    const includeTechNews = useRef(null)\n    const includeAnnouncements = useRef(null)\n    const includeDigests = useRef(null)\n\n    const updateState = (state) => {\n        setState(prev => ({\n            ...prev,\n            ...state\n        }))\n    }\n\n    const validateInn = () => {\n        const innValue = inn.current.value\n        updateState({innError: false})\n        if (innValue === \"\") {\n            return false\n        }\n        if (!innValue.match(/^\\d{10}$/)) {\n            updateState({innError: true})\n            return false\n        }\n        const innNum = innValue.split('')\n        const coefficients = [2, 4, 10, 3, 5, 9, 4, 6, 8]\n        let innSumma = 0;\n        for (let i in coefficients) {\n            innSumma += coefficients[i] * innNum[i];\n        }\n        const innCheck = innSumma % 11 % 10;\n        const result = innNum[9] === innCheck.toString()\n        updateState({innError: !result})\n        return result\n    }\n\n    const validateLimit = () => {\n        const limitValue = Number.parseInt(limit.current.value)\n        const result = limitValue >= 1 && limitValue <= 1000\n        updateState({limitError: !result})\n        return result\n    }\n\n    const validateDate = () => {\n        updateState({dateError: false})\n        if (!startDate.current.value || !endDate.current.value) {\n            return false\n        }\n        const startValue = new Date(startDate.current.value)\n        const endValue = new Date(endDate.current.value)\n        const result = startValue <= endValue\n        updateState({dateError: !result})\n        return result\n    }\n\n    const setButtonState = (inn, limit, date) => {\n        updateState({\n            inn: inn,\n            limit: limit,\n            date: date,\n            disableButton: !(inn && limit && date)\n        })\n    }\n\n    const validateForm = (event) => {\n        let innState = state.inn\n        let limitState = state.limit\n        let dateState = state.date\n\n        if (event.target === inn.current) {\n            innState = validateInn()\n        } else if (event.target === limit.current) {\n            limitState = validateLimit()\n        } else if (event.target === startDate.current || event.target === endDate.current) {\n            dateState = validateDate()\n        }\n\n        setButtonState(innState, limitState, dateState)\n    }\n\n    useEffect(() => {\n        if (token === false) {\n            navigate(\"/login\")\n            return\n        }\n        setButtonState(validateInn(), validateLimit(), validateDate())\n    }, [token])\n\n    const submit = (event) => {\n        event.preventDefault()\n\n        dispatch(setRequest({\n            inn: inn.current.value,\n            tonality: tonality.current.value,\n            limit: limit.current.value,\n            startDate: startDate.current.value,\n            endDate: endDate.current.value,\n            maxFullness: maxFullness.current.checked,\n            inBusinessNews: inBusinessNews.current.checked,\n            onlyMainRole: onlyMainRole.current.checked,\n            onlyWithRiskFactors: onlyWithRiskFactors.current.checked,\n            excludeTechNews: !includeTechNews.current.checked,\n            excludeAnnouncements: !includeAnnouncements.current.checked,\n            excludeDigests: !includeDigests.current.checked,\n        }))\n\n        navigate(\"/response\")\n    }\n\n    return (<main className={css.request}>\n        <h1 className={css.head}>Найдите необходимые данные в пару кликов.</h1>\n        <p className={css.subHead}>Задайте параметры поиска.<br/>Чем больше заполните, тем точнее поиск</p>\n\n        <form onSubmit={submit} className={css.form}>\n            <div className={css.container}>\n                <div className={css.block1}>\n                    <label className={css.innLabel} htmlFor=\"request_inn\">ИНН компании *</label>\n                    <input onChange={validateForm} ref={inn} id=\"request_inn\"\n                           placeholder=\"10 цифр\" pattern=\"\\d{10}\" defaultValue={request.inn} required={true}\n                           className={state.innError ? `${css.innInput} ${css.redInput}` : `${css.innInput}`}/>\n                    <div className={css.inputError}>\n                        {state.innError ? \"Введите корректные данные\" : <>&nbsp;</>}\n                    </div>\n\n                    <label className={css.tonalityLabel} htmlFor=\"request_tonality\">Тональность</label>\n                    <select className={css.tonalitySelect} ref={tonality} id=\"request_tonality\"\n                            defaultValue={request.tonality}>\n                        <option value=\"any\">Любая</option>\n                        <option value=\"negative\">Негативная</option>\n                        <option value=\"neutral\">Нейтральная</option>\n                        <option value=\"positive\">Позитивная</option>\n                    </select>\n                    <label className={css.limitLabel} htmlFor=\"request_limit\">\n                        Количество документов в выдаче *\n                    </label>\n                    <input onChange={validateForm} ref={limit} id=\"request_limit\"\n                           type=\"number\" placeholder=\"От 1 до 1000\" min=\"1\" max=\"1000\" defaultValue={request.limit}\n                           className={state.limitError ? `${css.limitInput} ${css.redInput}` : `${css.limitInput}`}/>\n                    <div className={css.inputError}>\n                        {state.limitError ? \"Обязательное поле\" : <>&nbsp;</>}\n                    </div>\n                </div>\n                <div className={css.block2}>\n                    <label className={css.dateLabel} htmlFor=\"request_start_date\">Диапазон поиска *</label>\n                    <input onChange={validateForm} ref={startDate} id=\"request_start_date\"\n                           type=\"date\" data-placeholder=\"Дата начала\" required={true}\n                           defaultValue={request.startDate}\n                           className={state.dateError ? `${css.startDate} ${css.redInput}` : `${css.startDate}`}/>\n                    <input onChange={validateForm} ref={endDate} type=\"date\"\n                           data-placeholder=\"Дата конца\" required={true}\n                           defaultValue={request.endDate}\n                           className={state.dateError ? `${css.endDate} ${css.redInput}` : `${css.endDate}`}/>\n                    <div className={css.dateError}>\n                        {state.dateError ? \"Введите корректные данные\" : <>&nbsp;</>}\n                    </div>\n                </div>\n\n                <div className={css.block3}>\n                    <label>\n                        <input ref={maxFullness} type=\"checkbox\" defaultChecked={request.maxFullness}/>\n                        Признак максимальной полноты\n                    </label>\n\n                    <label>\n                        <input ref={inBusinessNews} type=\"checkbox\" defaultChecked={request.inBusinessNews}/>\n                        Упоминания в бизнес-контексте\n                    </label>\n\n                    <label>\n                        <input ref={onlyMainRole} type=\"checkbox\" defaultChecked={request.onlyMainRole}/>\n                        Главная роль в публикации\n                    </label>\n\n                    <label>\n                        <input ref={onlyWithRiskFactors} type=\"checkbox\" defaultChecked={request.onlyWithRiskFactors}/>\n                        Публикации только с риск-факторами\n                    </label>\n\n                    <label>\n                        <input ref={includeTechNews} type=\"checkbox\" defaultChecked={!request.excludeTechNews}/>\n                        Включать технические новости рынков\n                    </label>\n\n                    <label>\n                        <input ref={includeAnnouncements} type=\"checkbox\" defaultChecked={!request.excludeAnnouncements}/>\n                        Включать анонсы и календари\n                    </label>\n\n                    <label>\n                        <input ref={includeDigests} type=\"checkbox\" defaultChecked={!request.excludeDigests}/>\n                        Включать сводки новостей\n                    </label>\n                </div>\n\n                <div className={css.block4}>\n                    <button disabled={state.disableButton} className={css.submit} type=\"submit\">\n                        Поиск\n                    </button>\n                    <p className={css.terms}>\n                        * Обязательные к заполнению поля\n                    </p>\n                </div>\n            </div>\n        </form>\n\n        <img className={css.rocket} src=\"/static/rocket.svg\" alt=\"\"/>\n        <img className={css.sheet} src=\"/static/sheet.svg\" alt=\"\"/>\n        <img className={css.folders} src=\"/static/folders.svg\" alt=\"\"/>\n\n\n    </main>)\n\n}\n\nexport default RequestPage","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Header.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Footer\\Footer.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section3\\Section3.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section4\\Section4.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section2\\Section2.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section1\\Section1.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Documents\\Documents.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Total\\Total.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Login\\Login.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\Menu\\Menu.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\MobileMenu\\MobileMenu.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\AccountInfo\\Account\\Account.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\AccountInfo\\Info\\Info.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Main\\Section4\\Tariff\\Tariff.jsx",[],[],"C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\ResponsePage\\Documents\\Document\\Document.jsx",["167"],[],"import css from \"./Document.module.css\"\nimport {useEffect, useState} from \"react\";\nimport sax from \"sax\"\nimport fix from 'fix-html';\n\nconst Document = ({doc}) => {\n    const [img, setImg] = useState(null)\n    const [text, setText] = useState(null)\n\n    useEffect(() => {\n        let html = \"\";\n        const xmlParser = sax.parser(true);\n        xmlParser.ontext = function (t) {\n            html = html + t\n        }\n        xmlParser.onend = function () {\n            const paragraphs = [\"\"]\n            let paragraph = 0\n            let imgSrc = null\n            const htmlParser = sax.parser(false);\n            htmlParser.ontext = function (t) {\n                paragraphs[paragraph] = paragraphs[paragraph] + t.replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/[\\n\\r]/g, \"\")\n            }\n            htmlParser.onopentag = function (node) {\n                if (node.name == 'IMG') {\n                    imgSrc = node.attributes.SRC\n                }\n                else {\n                    paragraph++\n                    paragraphs[paragraph] = \"\"\n                }\n            };\n            htmlParser.onend = function () {\n                setImg(imgSrc)\n                setText(paragraphs)\n            }\n            htmlParser.write(fix(html)).close()\n        };\n        xmlParser.write(doc.content.markup).close()\n    }, [doc.content.markup])\n\n    return (\n        <section className={css.document}>\n            <div className={css.container}>\n                <div className={css.source}>\n                <span className={css.date}>\n                    {new Date(doc.issueDate).toLocaleDateString()}\n                </span>\n                    <a href={doc.url} target=\"_blank\" rel=\"noreferrer\">\n                        {doc.source.name}\n                    </a>\n                </div>\n                <h3 className={css.head}>\n                    {doc.title.text}\n                </h3>\n                <div className={css.type}>\n                    {doc.attributes.isTechNews ? <div>Технические новости</div> : \"\"}\n                    {doc.attributes.isAnnouncement ? <div>Анонсы и события</div> : \"\"}\n                    {doc.attributes.isDigest ? <div>Сводки новостей</div> : \"\"}\n                </div>\n                <div className={css.content}>\n                    <div className={css.contentContainer}>\n                        {img ? <img className={css.img} src={img} alt=\"\" /> : \"\"}\n                        <div className={css.text}>\n                            {text ? text.map((item, key) => {return item.length ? <p key={key}>{item}</p> : \"\"}) : \"\"}\n                        </div>\n                    </div>\n                </div>\n                <div className={css.foot}>\n                    <a className={css.readSource} href={doc.url} target=\"_blank\" rel=\"noreferrer\">\n                        Читать в источнике\n                    </a>\n                    <div className={css.words}>\n                        {Number(doc.attributes.wordCount).toLocaleString()} слова\n                    </div>\n\n                </div>\n            </div>\n        </section>\n    )\n\n}\n\nexport default Document","C:\\Users\\roman\\OneDrive\\Рабочий стол\\SF_Scan\\src\\Components\\Header\\MainMenu.jsx",[],[],{"ruleId":"168","severity":1,"message":"169","line":16,"column":8,"nodeType":"170","endLine":16,"endColumn":15,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":13,"column":8,"nodeType":"170","endLine":13,"endColumn":10,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"169","line":131,"column":8,"nodeType":"170","endLine":131,"endColumn":24,"suggestions":"174"},{"ruleId":"168","severity":1,"message":"175","line":117,"column":8,"nodeType":"170","endLine":117,"endColumn":15,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":25,"column":31,"nodeType":"179","messageId":"180","endLine":25,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.",["182"],["183"],"React Hook useEffect has missing dependencies: 'navigate', 'setButtonState', 'validateDate', 'validateInn', and 'validateLimit'. Either include them or remove the dependency array.",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [navigate, token]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"195","text":"196"},"Update the dependencies array to be: [token, request, navigate]",{"range":"197","text":"198"},"Update the dependencies array to be: [navigate, setButtonState, token, validateDate, validateInn, validateLimit]",{"range":"199","text":"200"},[409,416],"[navigate, token]",[347,349],"[dispatch, navigate]",[4419,4435],"[token, request, navigate]",[3538,3545],"[navigate, setButtonState, token, validateDate, validateInn, validateLimit]"]