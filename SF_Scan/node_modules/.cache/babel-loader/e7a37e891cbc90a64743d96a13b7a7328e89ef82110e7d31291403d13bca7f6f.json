{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roman\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\SF_Scan\\\\src\\\\Components\\\\ResponsePage\\\\ResponsePage.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useToken } from \"../../redux/token\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Total from \"./Total/Total\";\nimport Documents from \"./Documents/Documents\";\nimport css from \"./ResponsePage.module.css\";\nimport svg from \"./woman-target.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const token = useToken();\n  const request = useSelector(state => state.request);\n  const [histograms, setHistograms] = useState(null);\n  const [objects, setObjects] = useState(null);\n  const [error, setError] = useState(false);\n  const processHistograms = response => {\n    const data = {\n      totalDocuments: [],\n      riskFactors: []\n    };\n    for (let l of response.data.data) {\n      switch (l.histogramType) {\n        case \"totalDocuments\":\n          data.totalDocuments = l.data;\n          break;\n        case \"riskFactors\":\n          data.riskFactors = l.data;\n          break;\n        default:\n          break;\n      }\n    }\n    data.total = data.totalDocuments.reduce((sum, item) => sum + item.value, 0).toLocaleString();\n    setHistograms(data);\n  };\n  const processObjects = response => {\n    setObjects(response.data.items);\n  };\n  useEffect(() => {\n    if (token === false) {\n      navigate(\"/login\");\n      return;\n    }\n    if (request.empty) {\n      navigate(\"/request\");\n      return;\n    }\n    const histogramsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch/histograms';\n    const objectsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch';\n    const search = {\n      issueDateInterval: {\n        startDate: new Date(request.startDate).toISOString(),\n        endDate: new Date(request.endDate).toISOString()\n      },\n      searchContext: {\n        targetSearchEntitiesContext: {\n          targetSearchEntities: [{\n            type: \"company\",\n            sparkId: null,\n            entityId: null,\n            inn: request.inn,\n            maxFullness: request.maxFullness,\n            inBusinessNews: request.inBusinessNews\n          }],\n          onlyMainRole: request.onlyMainRole,\n          tonality: request.tonality,\n          onlyWithRiskFactors: request.onlyWithRiskFactors,\n          riskFactors: {\n            and: [],\n            or: [],\n            not: []\n          },\n          themes: {\n            and: [],\n            or: [],\n            not: []\n          }\n        },\n        themesFilter: {\n          and: [],\n          or: [],\n          not: []\n        }\n      },\n      searchArea: {\n        includedSources: [],\n        excludedSources: [],\n        includedSourceGroups: [],\n        excludedSourceGroups: []\n      },\n      attributeFilters: {\n        excludeTechNews: request.excludeTechNews,\n        excludeAnnouncements: request.excludeAnnouncements,\n        excludeDigests: request.excludeDigests\n      },\n      similarMode: \"duplicates\",\n      limit: request.limit,\n      sortType: \"sourceInfluence\",\n      sortDirectionType: \"desc\",\n      intervalType: \"month\",\n      histogramTypes: [\"totalDocuments\", \"riskFactors\"]\n    };\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n    axios.post(histogramsUrl, search, config).then(processHistograms).catch(() => {\n      setError(true);\n    });\n    axios.post(objectsUrl, search, config).then(processObjects).catch(() => {\n      setError(true);\n    });\n  }, [token, request]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: css.response,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: css.head,\n      children: \"\\u0418\\u0449\\u0435\\u043C. \\u0421\\u043A\\u043E\\u0440\\u043E \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.subHead,\n      children: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0437\\u0430\\u043D\\u044F\\u0442\\u044C \\u043D\\u0435\\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F, \\u043F\\u0440\\u043E\\u0441\\u0438\\u043C \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u044F\\u0442\\u044C \\u0442\\u0435\\u0440\\u043F\\u0435\\u043D\\u0438\\u0435.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: css.img,\n      src: svg,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      error: error,\n      histograms: histograms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), objects ? /*#__PURE__*/_jsxDEV(Documents, {\n      token: token,\n      objects: objects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 24\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(ResponsePage, \"mAX5y6OkGc6hazUaiT3wkb+kFo0=\", false, function () {\n  return [useNavigate, useToken, useSelector];\n});\n_c = ResponsePage;\nexport default ResponsePage;\nvar _c;\n$RefreshReg$(_c, \"ResponsePage\");","map":{"version":3,"names":["useSelector","useToken","useNavigate","useEffect","useState","axios","Total","Documents","css","svg","jsxDEV","_jsxDEV","ResponsePage","_s","navigate","token","request","state","histograms","setHistograms","objects","setObjects","error","setError","processHistograms","response","data","totalDocuments","riskFactors","l","histogramType","total","reduce","sum","item","value","toLocaleString","processObjects","items","empty","histogramsUrl","objectsUrl","search","issueDateInterval","startDate","Date","toISOString","endDate","searchContext","targetSearchEntitiesContext","targetSearchEntities","type","sparkId","entityId","inn","maxFullness","inBusinessNews","onlyMainRole","tonality","onlyWithRiskFactors","and","or","not","themes","themesFilter","searchArea","includedSources","excludedSources","includedSourceGroups","excludedSourceGroups","attributeFilters","excludeTechNews","excludeAnnouncements","excludeDigests","similarMode","limit","sortType","sortDirectionType","intervalType","histogramTypes","config","headers","Authorization","Accept","post","then","catch","className","children","head","fileName","_jsxFileName","lineNumber","columnNumber","subHead","img","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/roman/OneDrive/Рабочий стол/SF_Scan/src/Components/ResponsePage/ResponsePage.jsx"],"sourcesContent":["import {useSelector} from \"react-redux\";\nimport {useToken} from \"../../redux/token\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Total from \"./Total/Total\";\nimport Documents from \"./Documents/Documents\";\n\nimport css from \"./ResponsePage.module.css\"\nimport svg from \"./woman-target.svg\"\n\nconst ResponsePage = () => {\n    const navigate = useNavigate()\n    const token = useToken()\n    const request = useSelector((state) => state.request)\n    const [histograms, setHistograms] = useState(null)\n    const [objects, setObjects] = useState(null)\n    const [error, setError] = useState(false)\n\n    const processHistograms = (response) => {\n        const data = {\n            totalDocuments: [],\n            riskFactors: [],\n        }\n        for (let l of response.data.data) {\n            switch (l.histogramType) {\n                case \"totalDocuments\":\n                    data.totalDocuments = l.data\n                    break\n                case \"riskFactors\":\n                    data.riskFactors = l.data\n                    break\n                default:\n                    break\n            }\n        }\n        data.total = data.totalDocuments\n            .reduce((sum, item) => sum + item.value, 0)\n            .toLocaleString()\n        setHistograms(data)\n    }\n\n    const processObjects = (response) => {\n        setObjects(response.data.items)\n    }\n\n    useEffect(() => {\n        if (token === false) {\n            navigate(\"/login\")\n            return\n        }\n        if (request.empty) {\n            navigate(\"/request\")\n            return\n        }\n        const histogramsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch/histograms'\n        const objectsUrl = 'https://gateway.scan-interfax.ru/api/v1/objectsearch'\n        const search = {\n            issueDateInterval: {\n                startDate: new Date(request.startDate).toISOString(),\n                endDate: new Date(request.endDate).toISOString(),\n            },\n            searchContext: {\n                targetSearchEntitiesContext: {\n                    targetSearchEntities: [\n                        {\n                            type: \"company\",\n                            sparkId: null,\n                            entityId: null,\n                            inn: request.inn,\n                            maxFullness: request.maxFullness,\n                            inBusinessNews: request.inBusinessNews,\n                        }\n                    ],\n                    onlyMainRole: request.onlyMainRole,\n                    tonality: request.tonality,\n                    onlyWithRiskFactors: request.onlyWithRiskFactors,\n                    riskFactors: {\n                        and: [],\n                        or: [],\n                        not: []\n                    },\n                    themes: {\n                        and: [],\n                        or: [],\n                        not: []\n                    }\n                },\n                themesFilter: {\n                    and: [],\n                    or: [],\n                    not: []\n                }\n            },\n            searchArea: {\n                includedSources: [],\n                excludedSources: [],\n                includedSourceGroups: [],\n                excludedSourceGroups: []\n            },\n            attributeFilters: {\n                excludeTechNews: request.excludeTechNews,\n                excludeAnnouncements: request.excludeAnnouncements,\n                excludeDigests: request.excludeDigests,\n            },\n            similarMode: \"duplicates\",\n            limit: request.limit,\n            sortType: \"sourceInfluence\",\n            sortDirectionType: \"desc\",\n            intervalType: \"month\",\n            histogramTypes: [\n                \"totalDocuments\",\n                \"riskFactors\"\n            ]\n        }\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            }\n        }\n        axios\n            .post(histogramsUrl, search, config)\n            .then(processHistograms)\n            .catch(() => {setError(true)})\n        axios\n            .post(objectsUrl, search, config)\n            .then(processObjects)\n            .catch(() => {setError(true)})\n    }, [token, request])\n\n    return (\n        <main className={css.response}>\n            <h1 className={css.head}>Ищем. Скоро будут результаты</h1>\n            <p className={css.subHead}>Поиск может занять некоторое время, просим сохранять терпение.</p>\n            <img className={css.img} src={svg} alt=\"\"/>\n            <Total error={error} histograms={histograms}/>\n            {objects ? <Documents token={token} objects={objects}/> : \"\" }\n        </main>\n    )\n}\n\nexport default ResponsePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}